<?php
/**
 * This file is part of SaQle framework.
 * 
 * (c) 2018 SaQle
 * 
 * For the full copyright and license information, please view the LICENSE file
 * that was ditributed with the source code
 * */

/**
 * Represents a configuration object
 * 
 * @pacakge SaQle
 * @author  Wycliffe Omondi Otieno <wycliffomondiotieno@gmail.com>
 * */

namespace SaQle\Config;

use SaQle\Auth\Models\Schema\{BaseRoleSchema, BasePermissionSchema, BaseTenantSchema, BaseUserSchema};

class Config{

	 private function validate_config(){
	 	
	 }

	 public function __construct(...$settings){
	 	/**
	 	 * Enable role based accesscontrol with the following flags.
	 	 * */
	 	define("ENABLE_RBAC", $settings['enable_rbac'] ?? false);
	 	define("ROLE_MODEL_CLASS", $settings['role_model_class'] ?? BaseRoleSchema::class);
	 	define("PERMISSION_MODEL_CLASS", $settings['role_model_class'] ?? BasePermissionSchema::class);
	 	
	 	/**
	 	 * Array of all the db context classes.
	 	 * */
	 	define("DB_CONTEXT_CLASSES", $settings['db_context_classes'] ?? []);

	 	/**
	 	 * Display errors
	 	 * */
	 	define("DISPLAY_ERRORS", $settings['display_errors'] ?? 0);
	 	define("DISPLAY_STARTUP_ERRORS", $settings['display_startup_errors'] ?? 0);

	 	 /**
	 	  * Project document root
	 	  * */
	 	 define("DOCUMENT_ROOT", $settings['document_root'] ?? $_SERVER['DOCUMENT_ROOT']);

         /**
          * App root domain
          * */
	 	 define("ROOT_DOMAIN", $settings['root_domain'] ?? $_SERVER['REQUEST_SCHEME'].'://'.$_SERVER['HTTP_HOST'].'/');

	 	 /**
	 	  * App base url
	 	  * */
	 	 define("BASE_URL", ROOT_DOMAIN);

	 	 /**
	 	  * Permission denied redirect url
	 	  * */
	 	 define("ACCESS_DENIED_REDIRECT_URL", $settings['access_denied_redirect_url'] ?? '');
	 	 define("RESOURCE_NOT_FOUND_REDIRECT_URL", $settings['resource_not_found_redirect_url'] ?? '');

		 /**
		  * List of all the apps/modules in the project. 
		  * A module/app is generally a folder with controllers, templates and routes
		  * */
	     define("INSTALLED_APPS", $settings['installed_apps'] ?? []);

		 /**
		 * Default primary key type
		 * Options [GUID, AUTO]
		 * Override this for a given model with PrimaryKey attribute on a model property passing in the type in the constructor
		 * GUID values will be auto generated before insert, while AUTO values are generated by the db engine on insert
		 * */
		 define("PRIMARY_KEY_TYPE", $settings['primary_key_type'] ?? 'GUID');

		 /**
		 * The model class name for authentications 
		 * This class must be of type User.
		 * */
		 define("AUTH_MODEL_CLASS", $settings['auth_model_class'] ?? BaseUserSchema::class);

		 /**
		  * The following flags will enable or disable multitenancy
		  * 1. TENANT_MODEL_CLASS  : the clas name of the tanant schema
		  * 2. ENABLE_MULTITENANCY : Expliclty set this to enable multi tenancy
		  * */
		 define("TENANT_MODEL_CLASS", $settings['tenant_model_class'] ?? BaseTenantSchema::class);
		 define("ENABLE_MULTITENANCY", $settings['enable_multitenancy'] ?? false);
		 

		 /**
		 * The authentication backend class
		 * */
		 define("AUTH_BACKEND_CLASS",  $settings['auth_backend_class']);

         /**
          * The name of the root media folder. This is where all uploads will be saved to.
          * */
		 define("MEDIA_FOLDER", $settings['media_folder'] ?? 'media');

		 /**
          * Set whether the media folder should live outside the webroot or in the webroot.
          * */
		 define("HIDDEN_MEDIA_FOLDER", $settings['hidden_media_folder'] ?? false);

		 /**
		  * API url prefixes
		  * */
		 define("API_URL_PREFIXES", $settings['api_url_prefixes'] ?? ['/api/v1/', '/api/v2/']);

		 /**
		  * Database settings
		  * */
		 define("DATABASE_USER",     $settings['database_user']     ?? '');
		 define("DATABASE_PASSWORD", $settings['database_password'] ?? '');
		 define("DATABASE_NAME",     $settings['database_name']     ?? '');
		 define("DATABASE_HOST",     $settings['database_host']     ?? 'localhost');

		 /**
		  * Date and time
		  * */
		 define("DATE_ADDED_FORMAT",       $settings['date_added_format']       ?? 'jS M Y');
		 define("DATE_DISPLAY_FORMAT",     $settings['date_display_format']     ?? 'jS M Y');
		 define("DATETIME_DISPLAY_FORMAT", $settings['datetime_display_format'] ?? 'jS M Y h:s:m a');
		 define("DEFAULT_TIMEZONE",        $settings['default_timezone']        ?? 'Africa/Nairobi');
		 define("SYSTEM_DATE_FORMAT",      $settings['system_date_format']      ?? 'd-m-Y');

		 /**
		  * Session settings
		  * */
		 define("SESSION_DOMAIN",  $settings['session_domain'] ?? $_SERVER['HTTP_HOST']);
		 define("SESSION_HANDLER", $settings['session_handler'] ?? '');

		 /**
		  * Email settings
		  * */
		 define("EMAIL_USERNAME",                 $settings['email_username']       ?? '');
		 define("EMAIL_PASSWORD",                 $settings['email_password']       ?? '');
		 define("EMAIL_HOST",                     $settings['email_host']           ?? '');
		 define("EMAIL_PORT",                     $settings['email_port']           ?? 587);
		 define("EMAIL_SENDER_NAME",              $settings['email_sender_name']    ?? '');
		 define("EMAIL_SENDER_ADDRESS",           $settings['email_sender_address'] ?? '');
		 define("WELCOME_EMAIL_SETUP_CLASS",      $settings['welcome_email_setup_class'] ?? '');
		 define("VERIFICATION_EMAIL_SETUP_CLASS", $settings['verification_email_setup_class'] ?? '');

		 /**
		  * System administrator
		  * */
		 define("SYSTEM_ADMINISTRATOR_EMAIL", $settings['system_admin_email'] ?? 'wycliffomondiotieno@gmail.com');
		 define("SYSTEM_ADMINISTRATOR_NAME",  $settings['system_admin_name']  ?? 'Wycliffe Omondi');
		 define("DI_CONTAINER",  php_sapi_name() === 'cli' ? realpath(__DIR__ .'/../services/container/container.php')
		 	: dirname($_SERVER['DOCUMENT_ROOT'])."/saqle/services/container/container.php");

		 /**
		  * 1. Handling db column of type timestamp
		  * 2. These flags can also be set on a model's meta array, and if that's the case, will override the values set here
		  * */
		 define("DB_AUTO_INIT_TIMESTAMP", $settings['db_auto_init_timestamp'] ?? true);
		 define("DB_AUTO_UPDATE_TIMESTAMP", $settings['db_auto_update_timestamp'] ?? true);

		 /**
		  * 1. Set which type of time and/or date entry you want for created and modified at field for your models.
		  * 2. This flag can also be set on a model's meta array, and if that's the case, will override the value set here.
		  * Options: DATE, DATETIME, TIME, TIMESTAMP, PHPTIMESTAMP.
		  * 
		  * Defaults to PHPTIMESTAMP
		  * */
		 define("DB_AUTO_CMDT_TYPE", $settings['db_auto_cmdt_type'] ?? 'PHPTIMESTAMP');

		 /**
		  * When creating models, usually you want to keep track of 
		  * 1. Who added a row
		  * 2. Who modified a row
		  * 3. Who deleted a row
		  * 4. When was a row added
		  * 5. When was a row modified
		  * 6. When was a row deleted
		  * 
		  * The settings below will enable automatic inclusion of these fields without explicitly defining them 
		  * in all the models.
		  * 
		  * MODEL_AUTO_CM_FIELDS
		  * - This flag tells the model to generate Created By and Modified By fields. The field type will be GUID or AUTO(INT)
		  *   depending on what the PRIMARY_KEY_TYPE flag is set to.
		  * - The specific names of the fields will be set by adding the flags MODEL_CREATED_BY_FIELD and MODEL_MODIFIED_BY_FIELD
		  * 
		  * MODEL_AUTO_CMDT_FIELDS
		  * - This flag tells the model to generate Created At and Modified At date/datetime/time/timestamp fields. The field type will be derived from
		  *   the DB_AUTO_CMDT_TYPE flag
		  * - The specific names of the fields will be set by adding the flags MODEL_CREATED_AT_FIELD and MODEL_MODIFIED_AT_FIELD
		  * 
		  * MODEL_SOFT_DELETE
		  * - This flag tells the model to generate Is Deleted, Deleted By and Deleted At fields. The Deleted By type will
		  *   deoend on the PRIMARY_KEY_TYPE flag and Deleted At type will depend on the DB_AUTO_CMDT_TYPE flag.
		  * - The specific names of the fields will be set by adding the flags MODEL_DELETED_AT_FIELD and MODEL_DELETED_BY_FIELD and MODEL_DELETED_FIELD
		  * 
		  * All the flags below have model specific equivalents that can be used to override behavior from model to model
		  * if that need arises.
		  * */
		 define("MODEL_AUTO_CM_FIELDS", $settings['model_auto_cm_fields'] ?? false);
		 define("MODEL_CREATED_BY_FIELD", $settings['model_created_by_field'] ?? 'added_by');
		 define("MODEL_MODIFIED_BY_FIELD", $settings['model_modified_by_field'] ?? 'modified_by');

		 define("MODEL_AUTO_CMDT_FIELDS", $settings['model_auto_cmdt_fields'] ?? false);
		 define("MODEL_CREATED_AT_FIELD", $settings['model_created_at_field'] ?? 'date_added');
		 define("MODEL_MODIFIED_AT_FIELD", $settings['model_modified_at_field'] ?? 'last_modified');

		 define("MODEL_SOFT_DELETE", $settings['model_soft_delete'] ?? false);
		 define("MODEL_DELETED_AT_FIELD", $settings['model_deleted_at_field'] ?? 'deleted_at');
		 define("MODEL_DELETED_By_FIELD", $settings['model_deleted_by_field'] ?? 'deleted_by');
		 define("MODEL_DELETED_FIELD", $settings['model_deleted_field'] ?? 'deleted');

		 /**
          * What happens when duplicate data is encountered during insert or update operations.
          * 
          * Options include: 
          * IGNORE_DUPLICATE - just ignore the duplicate data and add the rest if there are multiple records to add
          * ABORT_WITH_ERROR - Abort the insert or update operation and throw an exception
          * ABORT_WITHOUT_ERROR - Abort the insert or update operation without throwing an exception.d
          * 
          * Defaults to IGNORE_DUPLICATE
          * 
          * */
		 define("MODEL_ACTION_ON_DUPLICATE", $settings['model_action_on_duplicate'] ?? 'IGNORE_DUPLICATE');

		 $this->validate_config();
	 }
}
?>